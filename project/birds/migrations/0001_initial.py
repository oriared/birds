# Generated by Django 4.2.3 on 2023-07-20 03:29

import datetime
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Bird',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, verbose_name='UUID идентификатор')),
                ('slug', models.SlugField(verbose_name='slug')),
                ('name', models.CharField(max_length=255, verbose_name='Имя')),
                ('birth', models.DateField(editable=False, verbose_name='Дата рождения')),
                ('gender', models.CharField(choices=[('M', 'Мужской'), ('F', 'Женский')], max_length=2, verbose_name='Пол')),
                ('is_ringed', models.BooleanField(default=False, verbose_name='Окольцована')),
                ('last_seen', models.DateTimeField(default=datetime.datetime(2023, 7, 20, 8, 29, 47, 462873), verbose_name='Время последнего наблюдения')),
                ('description', models.TextField(blank=True, max_length=3000, verbose_name='Описание')),
                ('eggs_number', models.PositiveSmallIntegerField(default=0, verbose_name='Снесённых яиц')),
                ('photo', models.ImageField(default='images/no_photo.jpg', upload_to='images/photos', verbose_name='Фото')),
            ],
            options={
                'verbose_name': 'Птица',
                'verbose_name_plural': 'Птицы',
                'ordering': ('birth',),
                'get_latest_by': ('birth', '-last_seen'),
            },
        ),
        migrations.CreateModel(
            name='Specie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('is_endemic', models.BooleanField(default=False, verbose_name='Эндемик')),
                ('is_endangered', models.BooleanField(default=False, verbose_name='Исчезающий вид')),
            ],
            options={
                'verbose_name': 'Вид',
                'verbose_name_plural': 'Виды',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Nest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='Название')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, verbose_name='UUID идентификатор')),
                ('lon', models.FloatField(verbose_name='Долгота')),
                ('lat', models.FloatField(verbose_name='Широта')),
                ('description', models.TextField(blank=True, max_length=3000, verbose_name='Описание')),
                ('created', models.DateField(verbose_name='Дата постройки')),
                ('translation_url', models.URLField(blank=True, verbose_name='Трансляция гнезда')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='created_nests', to='birds.bird', verbose_name='Кто свил')),
            ],
            options={
                'verbose_name': 'Гнездо',
                'verbose_name_plural': 'Гнёзда',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='BirdNest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_check_inn', models.DateField(verbose_name='Дата заселения')),
                ('date_leaving', models.DateField(null=True, verbose_name='Дата покидания')),
                ('eggs', models.PositiveSmallIntegerField(default=0, verbose_name='Кол-во снесённых яиц')),
                ('bird', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bird_nests', to='birds.bird', verbose_name='Птица')),
                ('nest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nest_birds', to='birds.nest', verbose_name='Гнездо')),
            ],
            options={
                'verbose_name': 'Гнездо птицы',
                'verbose_name_plural': 'Гнёзда птиц',
                'ordering': ('-date_check_inn',),
            },
        ),
        migrations.AddField(
            model_name='bird',
            name='birth_nest',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='birth_birds', to='birds.nest', verbose_name='Гнездо рождения'),
        ),
        migrations.AddField(
            model_name='bird',
            name='current_nest',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='current_birds', to='birds.nest', verbose_name='Гнездо проживания'),
        ),
        migrations.AddField(
            model_name='bird',
            name='nests',
            field=models.ManyToManyField(related_name='birds', through='birds.BirdNest', to='birds.nest', verbose_name='Гнёзда'),
        ),
        migrations.AddField(
            model_name='bird',
            name='parent',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='childs', to='birds.bird', verbose_name='Родитель'),
        ),
        migrations.AddField(
            model_name='bird',
            name='specie',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='birds', to='birds.specie', verbose_name='Вид'),
        ),
        migrations.AddConstraint(
            model_name='nest',
            constraint=models.CheckConstraint(check=models.Q(('lon__lte', 90), ('lat__lte', 90)), name='lon_lat_90_deg'),
        ),
        migrations.AddConstraint(
            model_name='bird',
            constraint=models.CheckConstraint(check=models.Q(('birth__lte', datetime.date(2023, 7, 20))), name='birth_lte_today'),
        ),
    ]
